# RabbitMQ configuration for microservices
# This file contains RabbitMQ configuration optimized for microservices

# Management plugin
management.tcp.port = 15672
management.tcp.ip = 0.0.0.0

# Networking
listeners.tcp.default = 5672
listeners.tcp.1 = 0.0.0.0:5672

# Security
default_user = admin
default_pass = password
default_vhost = /
default_user_tags.administrator = true
default_permissions.configure = .*
default_permissions.read = .*
default_permissions.write = .*

# Performance settings
vm_memory_high_watermark.relative = 0.6
disk_free_limit.relative = 2.0
heartbeat = 60

# Clustering (if using cluster)
# cluster_formation.peer_discovery_backend = rabbit_peer_discovery_classic_config
# cluster_formation.classic_config.nodes.1 = rabbit@rabbitmq1
# cluster_formation.classic_config.nodes.2 = rabbit@rabbitmq2

# Queues and exchanges for microservices
# These will be created automatically by services, but documented here for reference:

# User Service
# - user.events (topic exchange)
# - user.commands (direct exchange)
# - user.registration.queue
# - user.login.queue
# - user.profile.queue

# Product Service  
# - product.events (topic exchange)
# - product.commands (direct exchange)
# - product.catalog.queue
# - product.search.queue
# - product.reviews.queue

# Order Service
# - order.events (topic exchange)
# - order.commands (direct exchange)
# - order.create.queue
# - order.update.queue
# - order.cancel.queue

# Payment Service
# - payment.events (topic exchange)
# - payment.commands (direct exchange)
# - payment.process.queue
# - payment.refund.queue

# Notification Service
# - notification.events (topic exchange)
# - notification.commands (direct exchange)
# - notification.email.queue
# - notification.sms.queue
# - notification.push.queue

# Analytics Service
# - analytics.events (topic exchange)
# - analytics.commands (direct exchange)
# - analytics.tracking.queue
# - analytics.reporting.queue

# Dead letter exchange for failed messages
# - dlx.exchange (direct exchange)
# - dlx.queue

# Logging
log.console = true
log.console.level = info
log.file = /var/log/rabbitmq/rabbitmq.log
log.file.level = info
log.file.rotation.date = $D0
log.file.rotation.size = 10485760

# Policies for high availability and durability
# ha-mode = all
# ha-sync-mode = automatic
# ha-sync-batch-size = 1

# Message TTL settings
# message_ttl = 3600000  # 1 hour
# queue_ttl = 3600000    # 1 hour

# Connection settings
connection_max = 1000
channel_max = 2000

# SSL/TLS settings (enable in production)
# ssl_options.cacertfile = /path/to/ca_certificate.pem
# ssl_options.certfile = /path/to/server_certificate.pem
# ssl_options.keyfile = /path/to/server_key.pem
# ssl_options.verify = verify_peer
# ssl_options.fail_if_no_peer_cert = true

# Prometheus monitoring
# prometheus.tcp.port = 15692
# prometheus.tcp.ip = 0.0.0.0

# Shovel plugin for message forwarding (if needed)
# shovel.src-uri = amqp://source-server
# shovel.dest-uri = amqp://destination-server
