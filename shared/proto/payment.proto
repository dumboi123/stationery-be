syntax = "proto3";

package payment;

option go_package = "github.com/company/microservices/payment";

// Payment Service
service PaymentService {
  rpc ProcessPayment(ProcessPaymentRequest) returns (ProcessPaymentResponse);
  rpc GetPayment(GetPaymentRequest) returns (GetPaymentResponse);
  rpc RefundPayment(RefundPaymentRequest) returns (RefundPaymentResponse);
  rpc GetPaymentHistory(GetPaymentHistoryRequest) returns (GetPaymentHistoryResponse);
}

// Messages
message ProcessPaymentRequest {
  string order_id = 1;
  string user_id = 2;
  double amount = 3;
  string currency = 4;
  string payment_method = 5;
  map<string, string> metadata = 6;
}

message ProcessPaymentResponse {
  string payment_id = 1;
  string status = 2;
  string transaction_id = 3;
  string message = 4;
}

message GetPaymentRequest {
  string payment_id = 1;
}

message GetPaymentResponse {
  Payment payment = 1;
}

message RefundPaymentRequest {
  string payment_id = 1;
  double amount = 2;
  string reason = 3;
}

message RefundPaymentResponse {
  string refund_id = 1;
  string status = 2;
  string message = 3;
}

message GetPaymentHistoryRequest {
  string user_id = 1;
  int32 page = 2;
  int32 limit = 3;
}

message GetPaymentHistoryResponse {
  repeated Payment payments = 1;
  int32 total = 2;
  int32 page = 3;
  int32 limit = 4;
}

message Payment {
  string id = 1;
  string order_id = 2;
  string user_id = 3;
  double amount = 4;
  string currency = 5;
  string method = 6;
  string status = 7;
  string transaction_id = 8;
  int64 created_at = 9;
  int64 updated_at = 10;
}
