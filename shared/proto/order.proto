syntax = "proto3";

package order;

option go_package = "./proto/order";

service OrderService {
  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);
  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse);
  rpc UpdateOrderStatus(UpdateOrderStatusRequest) returns (UpdateOrderStatusResponse);
  rpc CancelOrder(CancelOrderRequest) returns (CancelOrderResponse);
  rpc ListOrders(ListOrdersRequest) returns (ListOrdersResponse);
  rpc GetOrdersByUser(GetOrdersByUserRequest) returns (GetOrdersByUserResponse);
}

enum OrderStatus {
  PENDING = 0;
  CONFIRMED = 1;
  PROCESSING = 2;
  SHIPPED = 3;
  DELIVERED = 4;
  CANCELLED = 5;
}

message OrderItem {
  string product_id = 1;
  string product_name = 2;
  int32 quantity = 3;
  double price = 4;
  double total = 5;
}

message Order {
  string id = 1;
  string user_id = 2;
  repeated OrderItem items = 3;
  double subtotal = 4;
  double tax = 5;
  double shipping = 6;
  double total = 7;
  OrderStatus status = 8;
  string shipping_address = 9;
  string payment_method = 10;
  string payment_status = 11;
  int64 created_at = 12;
  int64 updated_at = 13;
}

message CreateOrderRequest {
  string user_id = 1;
  repeated OrderItem items = 2;
  string shipping_address = 3;
  string payment_method = 4;
}

message CreateOrderResponse {
  Order order = 1;
  string message = 2;
}

message GetOrderRequest {
  string id = 1;
}

message GetOrderResponse {
  Order order = 1;
}

message UpdateOrderStatusRequest {
  string id = 1;
  OrderStatus status = 2;
}

message UpdateOrderStatusResponse {
  Order order = 1;
  string message = 2;
}

message CancelOrderRequest {
  string id = 1;
  string reason = 2;
}

message CancelOrderResponse {
  string message = 1;
}

message ListOrdersRequest {
  int32 page = 1;
  int32 limit = 2;
  OrderStatus status = 3;
}

message ListOrdersResponse {
  repeated Order orders = 1;
  int32 total = 2;
  int32 page = 3;
  int32 limit = 4;
}

message GetOrdersByUserRequest {
  string user_id = 1;
  int32 page = 2;
  int32 limit = 3;
}

message GetOrdersByUserResponse {
  repeated Order orders = 1;
  int32 total = 2;
  int32 page = 3;
  int32 limit = 4;
}
